@model PortFolio.Models.Claim

@{
    ViewData["Title"] = "Claim";
}

<style>
    body {
        background-color: black;
        color: gold;
    }

    .btn-primary {
        background-color: gold;
        color: black;
    }

        .btn-primary:hover {
            background-color: #e6b800;
        }

    .btn-secondary {
        background-color: black;
        color: gold;
        border: 1px solid gold;
    }

        .btn-secondary:hover {
            background-color: #333;
        }

    .btn-danger {
        background-color: red;
        color: white;
    }

    .card {
        background-color: #222;
        border: 1px solid gold;
    }

    .card-header {
        background-color: #333;
        color: gold;
        border-bottom: 1px solid gold;
    }

    .form-control {
        background-color: #444;
        color: gold;
        border: 1px solid gold;
    }

    /* Make the total claim amount field black font */
    #totalClaimAmount {
        color: black;
    }
</style>

<div class="container py-5">
    <form id="claimForm" enctype="multipart/form-data">
        <div class="card mb-4">
            <div class="card-header">
                <h3>Personal Details</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="LecturerName">Lecturer Name</label>
                    <input asp-for="LecturerName" id="LecturerName" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="Department">Department</label>
                    <input asp-for="Department" id="Department" class="form-control" />
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h3>Module Details</h3>
            </div>
            <div class="card-body">
                <div id="modulesContainer">
                    <div class="module-entry">
                        <div class="form-group">
                            <label>Module Code</label>
                            <input name="Modules[0].ModuleCode" class="form-control module-code" />
                        </div>
                        <div class="form-group">
                            <label>Module Name</label>
                            <input name="Modules[0].ModuleName" class="form-control module-name" />
                        </div>
                        <div class="form-group">
                            <label>Claim Type</label>
                            <select name="Modules[0].ClaimType" class="form-control claim-type">
                                <option value="">Select</option>
                                <option value="CATCH UP">CATCH UP</option>
                                <option value="OVERTIME">OVERTIME</option>
                                <option value="General Claim">General Claim</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Rate Per Hour</label>
                            <input type="number" name="Modules[0].RatePerHour" class="form-control rate-per-hour" />
                        </div>
                        <div class="form-group">
                            <label>Hours Worked</label>
                            <input type="number" name="Modules[0].HoursWorked" class="form-control hours-worked" />
                        </div>
                        <!-- Removed the total amount field for each module -->
                        <button type="button" class="btn btn-danger remove-module">Remove Module</button>
                    </div>
                </div>
                <button type="button" id="addModule" class="btn btn-secondary">Add Module</button>
            </div>
        </div>

        <div class="form-group">
            <label>Supporting Documents</label>
            <input type="file" name="SupportingDocuments" class="form-control" />
        </div>

        <!-- Total Claim Amount displayed once at the bottom -->
        <div class="form-group">
            <label>Total Claim Amount</label>
            <input type="number" id="totalClaimAmount" class="form-control" readonly />
        </div>

        <button type="button" id="submitClaim" class="btn btn-primary">Submit Claim</button>
    </form>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const moduleTemplate = document.querySelector('.module-entry').cloneNode(true);
        moduleTemplate.querySelectorAll('input, select').forEach(input => input.value = '');

        function updateTotalAmount() {
            let totalAmount = 0;
            document.querySelectorAll('.module-entry').forEach(function (module) {
                const rate = parseFloat(module.querySelector('.rate-per-hour').value) || 0;
                const hours = parseFloat(module.querySelector('.hours-worked').value) || 0;
                const total = rate * hours;
                totalAmount += total;
            });
            document.getElementById('totalClaimAmount').value = totalAmount.toFixed(2);
        }

        document.getElementById('addModule').addEventListener('click', function () {
            const modulesContainer = document.getElementById('modulesContainer');
            const moduleCount = modulesContainer.children.length;
            const newModule = moduleTemplate.cloneNode(true);

            newModule.querySelectorAll('input, select').forEach(input => {
                input.name = input.name.replace('[0]', `[${moduleCount}]`);
                input.value = '';
            });

            modulesContainer.appendChild(newModule);
            updateTotalAmount(); // Recalculate total after adding a new module
        });

        document.getElementById('modulesContainer').addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-module')) {
                e.target.closest('.module-entry').remove();
                updateTotalAmount(); // Recalculate total after removing a module
            }
        });

        // Listen for changes to rate per hour and hours worked
        document.getElementById('modulesContainer').addEventListener('input', function (e) {
            if (e.target.classList.contains('rate-per-hour') || e.target.classList.contains('hours-worked')) {
                updateTotalAmount();
            }
        });

        document.getElementById('submitClaim').addEventListener('click', function () {
            // Simple validation
            let valid = true;
            document.querySelectorAll('.form-control').forEach(input => {
                if (!input.value.trim()) {
                    input.style.borderColor = 'red';
                    valid = false;
                } else {
                    input.style.borderColor = 'gold';
                }
            });

            if (!valid) {
                alert('Please fill out all fields.');
                return;
            }

            // Simulate form submission
            alert('Claim submitted successfully!');
            // Add your AJAX or form submission logic here
        });
    });
</script>
